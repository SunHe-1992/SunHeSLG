//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
using Bright.Serialization;
using System.Collections.Generic;
using SimpleJSON;



namespace cfg.MONO
{

public sealed partial class Building :  Bright.Config.BeanBase 
{
    public Building(JSONNode _json) 
    {
        { if(!_json["ID"].IsNumber) { throw new SerializationException(); }  ID = _json["ID"]; }
        { if(!_json["Name"].IsString) { throw new SerializationException(); }  Name = _json["Name"]; }
        { if(!_json["Level"].IsNumber) { throw new SerializationException(); }  Level = _json["Level"]; }
        { if(!_json["price"].IsNumber) { throw new SerializationException(); }  Price = _json["price"]; }
        { if(!_json["isMax"].IsBoolean) { throw new SerializationException(); }  IsMax = _json["isMax"]; }
        { if(!_json["Image"].IsString) { throw new SerializationException(); }  Image = _json["Image"]; }
        PostInit();
    }

    public Building(int ID, string Name, int Level, long price, bool isMax, string Image ) 
    {
        this.ID = ID;
        this.Name = Name;
        this.Level = Level;
        this.Price = price;
        this.IsMax = isMax;
        this.Image = Image;
        PostInit();
    }

    public static Building DeserializeBuilding(JSONNode _json)
    {
        return new MONO.Building(_json);
    }

    public int ID { get; private set; }
    public string Name { get; private set; }
    public int Level { get; private set; }
    /// <summary>
    /// upgrading price
    /// </summary>
    public long Price { get; private set; }
    public bool IsMax { get; private set; }
    /// <summary>
    /// icon in chapter select
    /// </summary>
    public string Image { get; private set; }

    public const int __ID__ = 812893567;
    public override int GetTypeId() => __ID__;

    public  void Resolve(Dictionary<string, object> _tables)
    {
        PostResolve();
    }

    public  void TranslateText(System.Func<string, string, string> translator)
    {
    }

    public override string ToString()
    {
        return "{ "
        + "ID:" + ID + ","
        + "Name:" + Name + ","
        + "Level:" + Level + ","
        + "Price:" + Price + ","
        + "IsMax:" + IsMax + ","
        + "Image:" + Image + ","
        + "}";
    }
    
    partial void PostInit();
    partial void PostResolve();
}
}

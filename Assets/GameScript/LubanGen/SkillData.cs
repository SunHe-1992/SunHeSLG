
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using Luban;
using SimpleJSON;


namespace cfg
{
public sealed partial class SkillData : Luban.BeanBase
{
    public SkillData(JSONNode _buf) 
    {
        { if(!_buf["ID"].IsNumber) { throw new SerializationException(); }  ID = _buf["ID"]; }
        { if(!_buf["SkillName"].IsString) { throw new SerializationException(); }  SkillName = _buf["SkillName"]; }
        { if(!_buf["AttackMultiplier"].IsNumber) { throw new SerializationException(); }  AttackMultiplier = _buf["AttackMultiplier"]; }
        { if(!_buf["AttackCount"].IsNumber) { throw new SerializationException(); }  AttackCount = _buf["AttackCount"]; }
        { if(!_buf["RangeMin"].IsNumber) { throw new SerializationException(); }  RangeMin = _buf["RangeMin"]; }
        { if(!_buf["RangeMax"].IsNumber) { throw new SerializationException(); }  RangeMax = _buf["RangeMax"]; }
        { var __json0 = _buf["Weapon"]; if(!__json0.IsArray) { throw new SerializationException(); } Weapon = new System.Collections.Generic.List<SLG.WeaponType>(__json0.Count); foreach(JSONNode __e0 in __json0.Children) { SLG.WeaponType __v0;  { if(!__e0.IsNumber) { throw new SerializationException(); }  __v0 = (SLG.WeaponType)__e0.AsInt; }  Weapon.Add(__v0); }   }
        { if(!_buf["AllowVantage"].IsBoolean) { throw new SerializationException(); }  AllowVantage = _buf["AllowVantage"]; }
        { if(!_buf["AllowFollowUp"].IsBoolean) { throw new SerializationException(); }  AllowFollowUp = _buf["AllowFollowUp"]; }
        { if(!_buf["AllowAlacrity"].IsBoolean) { throw new SerializationException(); }  AllowAlacrity = _buf["AllowAlacrity"]; }
        { if(!_buf["AllowCounter"].IsBoolean) { throw new SerializationException(); }  AllowCounter = _buf["AllowCounter"]; }
    }

    public static SkillData DeserializeSkillData(JSONNode _buf)
    {
        return new SkillData(_buf);
    }

    public readonly int ID;
    public readonly string SkillName;
    /// <summary>
    /// attack percent
    /// </summary>
    public readonly float AttackMultiplier;
    public readonly int AttackCount;
    public readonly int RangeMin;
    public readonly int RangeMax;
    /// <summary>
    /// weapon type restrict, empty=no restrict
    /// </summary>
    public readonly System.Collections.Generic.List<SLG.WeaponType> Weapon;
    /// <summary>
    /// allow foe&#39;s vantage skill
    /// </summary>
    public readonly bool AllowVantage;
    /// <summary>
    /// allow self&#39;s follow up
    /// </summary>
    public readonly bool AllowFollowUp;
    /// <summary>
    /// allow self&#39;s alacrity
    /// </summary>
    public readonly bool AllowAlacrity;
    /// <summary>
    /// allow foe&#39;s attack
    /// </summary>
    public readonly bool AllowCounter;
   
    public const int __ID__ = -300302981;
    public override int GetTypeId() => __ID__;

    public  void ResolveRef(Tables tables)
    {
        
        
        
        
        
        
        
        
        
        
        
    }

    public override string ToString()
    {
        return "{ "
        + "ID:" + ID + ","
        + "SkillName:" + SkillName + ","
        + "AttackMultiplier:" + AttackMultiplier + ","
        + "AttackCount:" + AttackCount + ","
        + "RangeMin:" + RangeMin + ","
        + "RangeMax:" + RangeMax + ","
        + "Weapon:" + Luban.StringUtil.CollectionToString(Weapon) + ","
        + "AllowVantage:" + AllowVantage + ","
        + "AllowFollowUp:" + AllowFollowUp + ","
        + "AllowAlacrity:" + AllowAlacrity + ","
        + "AllowCounter:" + AllowCounter + ","
        + "}";
    }
}

}
